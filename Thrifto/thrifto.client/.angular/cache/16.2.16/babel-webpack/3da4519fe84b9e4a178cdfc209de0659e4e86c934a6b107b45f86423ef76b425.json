{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"../services/notification.service\";\nimport * as i3 from \"@angular/router\";\nexport class ErrorInterceptor {\n  constructor(authService, notificationService, router) {\n    this.authService = authService;\n    this.notificationService = notificationService;\n    this.router = router;\n  }\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(error => {\n      if (error.status === 401) {\n        // Auto logout if 401 response returned from API\n        this.authService.logout();\n        this.router.navigate(['/login']);\n        this.notificationService.show('Your session has expired. Please log in again.', 'error');\n      } else if (error.status === 403) {\n        this.notificationService.show('You do not have permission to perform this action', 'error');\n      } else {\n        const message = error.error?.message || error.statusText || 'Something went wrong';\n        this.notificationService.show(message, 'error');\n      }\n      return throwError(() => error);\n    }));\n  }\n  static {\n    this.ɵfac = function ErrorInterceptor_Factory(t) {\n      return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.NotificationService), i0.ɵɵinject(i3.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ErrorInterceptor,\n      factory: ErrorInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["throwError","catchError","ErrorInterceptor","constructor","authService","notificationService","router","intercept","request","next","handle","pipe","error","status","logout","navigate","show","message","statusText","i0","ɵɵinject","i1","AuthService","i2","NotificationService","i3","Router","factory","ɵfac"],"sources":["C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\interceptors\\error.interceptor.ts"],"sourcesContent":["// src/app/interceptors/error.interceptor.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { NotificationService } from '../services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private notificationService: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 401) {\r\n          // Auto logout if 401 response returned from API\r\n          this.authService.logout();\r\n          this.router.navigate(['/login']);\r\n          this.notificationService.show('Your session has expired. Please log in again.', 'error');\r\n        } else if (error.status === 403) {\r\n          this.notificationService.show('You do not have permission to perform this action', 'error');\r\n        } else {\r\n          const message = error.error?.message || error.statusText || 'Something went wrong';\r\n          this.notificationService.show(message, 'error');\r\n        }\r\n\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;;;AAM3C,OAAM,MAAOC,gBAAgB;EAC3BC,YACUC,WAAwB,EACxBC,mBAAwC,EACxCC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC,CAACG,IAAI,CAC9BV,UAAU,CAAEW,KAAwB,IAAI;MACtC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB;QACA,IAAI,CAACT,WAAW,CAACU,MAAM,EAAE;QACzB,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAACV,mBAAmB,CAACW,IAAI,CAAC,gDAAgD,EAAE,OAAO,CAAC;OACzF,MAAM,IAAIJ,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QAC/B,IAAI,CAACR,mBAAmB,CAACW,IAAI,CAAC,mDAAmD,EAAE,OAAO,CAAC;OAC5F,MAAM;QACL,MAAMC,OAAO,GAAGL,KAAK,CAACA,KAAK,EAAEK,OAAO,IAAIL,KAAK,CAACM,UAAU,IAAI,sBAAsB;QAClF,IAAI,CAACb,mBAAmB,CAACW,IAAI,CAACC,OAAO,EAAE,OAAO,CAAC;;MAGjD,OAAOjB,UAAU,CAAC,MAAMY,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;;;uBAzBWV,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAhBxB,gBAAgB;MAAAyB,OAAA,EAAhBzB,gBAAgB,CAAA0B;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}