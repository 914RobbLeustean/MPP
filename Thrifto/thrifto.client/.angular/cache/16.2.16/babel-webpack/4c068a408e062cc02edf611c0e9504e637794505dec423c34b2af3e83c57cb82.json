{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { ConnectionStatus } from './services/network.service';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./services/signalr.service\";\nimport * as i3 from \"./services/network.service\";\nimport * as i4 from \"./services/offline-queue.service\";\nimport * as i5 from \"./services/auth.service\";\nimport * as i6 from \"./components/shared/network-status/network-status.component\";\nimport * as i7 from \"./components/shared/header/header.component\";\nimport * as i8 from \"./components/shared/footer/footer.component\";\nimport * as i9 from \"./components/shared/notification/notification.component\";\nexport class AppComponent {\n  constructor(router, signalrService, networkService, offlineQueueService, authService) {\n    this.router = router;\n    this.signalrService = signalrService;\n    this.networkService = networkService;\n    this.offlineQueueService = offlineQueueService;\n    this.authService = authService;\n    this.title = 'Thrifto';\n  }\n  ngOnInit() {\n    // Ensure scroll to top on route changes\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      // Use setTimeout to ensure DOM is ready\n      setTimeout(() => {\n        window.scrollTo(0, 0);\n      }, 0);\n    });\n    // Initialize network monitoring\n    this.networkService.status$.subscribe(status => {\n      console.log('Network status:', status);\n      // Manage SignalR connection based on network status\n      if (status === ConnectionStatus.Online && this.authService.isLoggedIn()) {\n        this.initializeSignalRConnection();\n      } else {\n        // Disconnect SignalR if network is down or server is down\n        this.signalrService.stopConnection();\n      }\n    });\n    // Setup window focus event to check connection when tab becomes active\n    window.addEventListener('focus', () => {\n      this.networkService.checkConnection();\n    });\n    // Listen for auth state changes to manage SignalR connection\n    this.authService.currentUser$.subscribe(user => {\n      if (user && this.networkService.isOnline) {\n        this.initializeSignalRConnection();\n      } else if (!user) {\n        this.signalrService.stopConnection();\n      }\n    });\n    // Initial connection if conditions are right\n    if (this.networkService.isOnline && this.authService.isLoggedIn()) {\n      this.initializeSignalRConnection();\n    }\n  }\n  initializeSignalRConnection() {\n    this.signalrService.startConnection().then(() => console.log('SignalR connected successfully')).catch(err => console.error('Error connecting to SignalR:', err));\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SignalrService), i0.ɵɵdirectiveInject(i3.NetworkService), i0.ɵɵdirectiveInject(i4.OfflineQueueService), i0.ɵɵdirectiveInject(i5.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 7,\n      vars: 0,\n      consts: [[1, \"app-container\"], [1, \"main-content\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-header\");\n          i0.ɵɵelementStart(2, \"main\", 1);\n          i0.ɵɵelement(3, \"router-outlet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"app-footer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"app-network-status\")(6, \"app-notification\");\n        }\n      },\n      dependencies: [i1.RouterOutlet, i6.NetworkStatusComponent, i7.HeaderComponent, i8.FooterComponent, i9.NotificationComponent],\n      styles: [\"\\n\\n[_nghost-%COMP%] {\\n  display: block;\\n  width: 100%;\\n  min-height: 100vh;\\n  overflow-x: hidden;\\n  margin: 0;\\n  padding: 0;\\n  scroll-behavior: smooth; \\n\\n}\\n\\n.app-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh;\\n  width: 100%;\\n  overflow-x: hidden;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.main-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  width: 100%;\\n  overflow-x: hidden;\\n  padding-top: 70px;\\n  margin: 0;\\n  box-sizing: border-box;\\n  \\n\\n  scroll-margin-top: 70px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtCQUFBO0FBQ0E7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLHVCQUFBLEVBQUEseUJBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7QUFDSjs7QUFFQTtFQUNJLE9BQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFNBQUE7RUFDQSxzQkFBQTtFQUNBLGdDQUFBO0VBQ0EsdUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIHNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzICovXHJcbjpob3N0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDsgLyogQWRkIHNtb290aCBzY3JvbGxpbmcgKi9cclxufVxyXG5cclxuLmFwcC1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLm1haW4tY29udGVudCB7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICBwYWRkaW5nLXRvcDogNzBweDsgLy8gQWNjb3VudCBmb3IgZml4ZWQgaGVhZGVyXHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgLyogRW5zdXJlIHByb3BlciBzY3JvbGwgdGFyZ2V0ICovXHJcbiAgICBzY3JvbGwtbWFyZ2luLXRvcDogNzBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["NavigationEnd","ConnectionStatus","filter","AppComponent","constructor","router","signalrService","networkService","offlineQueueService","authService","title","ngOnInit","events","pipe","event","subscribe","setTimeout","window","scrollTo","status$","status","console","log","Online","isLoggedIn","initializeSignalRConnection","stopConnection","addEventListener","checkConnection","currentUser$","user","isOnline","startConnection","then","catch","err","error","i0","ɵɵdirectiveInject","i1","Router","i2","SignalrService","i3","NetworkService","i4","OfflineQueueService","i5","AuthService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\app.component.ts","C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\app.component.html"],"sourcesContent":["// src/app/app.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { NetworkService, ConnectionStatus } from './services/network.service';\r\nimport { OfflineQueueService } from './services/offline-queue.service';\r\nimport { SignalrService } from './services/signalr.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'Thrifto';\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private signalrService: SignalrService,\r\n        private networkService: NetworkService,\r\n        private offlineQueueService: OfflineQueueService,\r\n        private authService: AuthService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // Ensure scroll to top on route changes\r\n        this.router.events.pipe(\r\n            filter(event => event instanceof NavigationEnd)\r\n        ).subscribe(() => {\r\n            // Use setTimeout to ensure DOM is ready\r\n            setTimeout(() => {\r\n                window.scrollTo(0, 0);\r\n            }, 0);\r\n        });\r\n\r\n        // Initialize network monitoring\r\n        this.networkService.status$.subscribe(status => {\r\n            console.log('Network status:', status);\r\n\r\n            // Manage SignalR connection based on network status\r\n            if (status === ConnectionStatus.Online && this.authService.isLoggedIn()) {\r\n                this.initializeSignalRConnection();\r\n            } else {\r\n                // Disconnect SignalR if network is down or server is down\r\n                this.signalrService.stopConnection();\r\n            }\r\n        });\r\n\r\n        // Setup window focus event to check connection when tab becomes active\r\n        window.addEventListener('focus', () => {\r\n            this.networkService.checkConnection();\r\n        });\r\n\r\n        // Listen for auth state changes to manage SignalR connection\r\n        this.authService.currentUser$.subscribe(user => {\r\n            if (user && this.networkService.isOnline) {\r\n                this.initializeSignalRConnection();\r\n            } else if (!user) {\r\n                this.signalrService.stopConnection();\r\n            }\r\n        });\r\n\r\n        // Initial connection if conditions are right\r\n        if (this.networkService.isOnline && this.authService.isLoggedIn()) {\r\n            this.initializeSignalRConnection();\r\n        }\r\n    }\r\n\r\n    private initializeSignalRConnection(): void {\r\n        this.signalrService.startConnection()\r\n            .then(() => console.log('SignalR connected successfully'))\r\n            .catch(err => console.error('Error connecting to SignalR:', err));\r\n    }\r\n}","<!-- src/app/app.component.html -->\r\n<div class=\"app-container\">\r\n    <app-header></app-header>\r\n    <main class=\"main-content\">\r\n        <router-outlet></router-outlet>\r\n    </main>\r\n    <app-footer></app-footer>\r\n</div>\r\n\r\n<app-network-status></app-network-status>\r\n<app-notification></app-notification>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}