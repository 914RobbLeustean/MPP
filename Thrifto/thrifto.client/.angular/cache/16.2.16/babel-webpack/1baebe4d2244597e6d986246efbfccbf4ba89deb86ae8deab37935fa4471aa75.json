{"ast":null,"code":"import { ConnectionStatus } from './services/network.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/signalr.service\";\nimport * as i2 from \"./services/network.service\";\nimport * as i3 from \"./services/offline-queue.service\";\nimport * as i4 from \"./services/auth.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"./components/shared/network-status/network-status.component\";\nimport * as i7 from \"./components/shared/header/header.component\";\nimport * as i8 from \"./components/shared/footer/footer.component\";\nimport * as i9 from \"./components/shared/notification/notification.component\";\nexport class AppComponent {\n  constructor(signalrService, networkService, offlineQueueService, authService) {\n    this.signalrService = signalrService;\n    this.networkService = networkService;\n    this.offlineQueueService = offlineQueueService;\n    this.authService = authService;\n    this.title = 'Thrifto';\n  }\n  ngOnInit() {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      // Use setTimeout to ensure DOM is ready\n      setTimeout(() => {\n        window.scrollTo(0, 0);\n      }, 0);\n    });\n    // Initialize network monitoring\n    this.networkService.status$.subscribe(status => {\n      console.log('Network status:', status);\n      // Manage SignalR connection based on network status\n      if (status === ConnectionStatus.Online && this.authService.isLoggedIn()) {\n        this.initializeSignalRConnection();\n      } else {\n        // Disconnect SignalR if network is down or server is down\n        this.signalrService.stopConnection();\n      }\n    });\n    // Setup window focus event to check connection when tab becomes active\n    window.addEventListener('focus', () => {\n      this.networkService.checkConnection();\n    });\n    // Listen for auth state changes to manage SignalR connection\n    this.authService.currentUser$.subscribe(user => {\n      if (user && this.networkService.isOnline) {\n        this.initializeSignalRConnection();\n      } else if (!user) {\n        this.signalrService.stopConnection();\n      }\n    });\n    // Initial connection if conditions are right\n    if (this.networkService.isOnline && this.authService.isLoggedIn()) {\n      this.initializeSignalRConnection();\n    }\n  }\n  initializeSignalRConnection() {\n    this.signalrService.startConnection().then(() => console.log('SignalR connected successfully')).catch(err => console.error('Error connecting to SignalR:', err));\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SignalrService), i0.ɵɵdirectiveInject(i2.NetworkService), i0.ɵɵdirectiveInject(i3.OfflineQueueService), i0.ɵɵdirectiveInject(i4.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 7,\n      vars: 0,\n      consts: [[1, \"app-container\"], [1, \"main-content\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-header\");\n          i0.ɵɵelementStart(2, \"main\", 1);\n          i0.ɵɵelement(3, \"router-outlet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"app-footer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"app-network-status\")(6, \"app-notification\");\n        }\n      },\n      dependencies: [i5.RouterOutlet, i6.NetworkStatusComponent, i7.HeaderComponent, i8.FooterComponent, i9.NotificationComponent],\n      styles: [\"\\n\\n[_nghost-%COMP%] {\\n  display: block;\\n  width: 100%;\\n  min-height: 100vh;\\n  overflow-x: hidden;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.app-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh;\\n  width: 100%;\\n  overflow-x: hidden;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.main-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  width: 100%;\\n  overflow-x: hidden;\\n  padding-top: 70px;\\n  margin: 0;\\n  box-sizing: border-box;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtCQUFBO0FBQ0E7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVBO0VBQ0ksT0FBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsU0FBQTtFQUNBLHNCQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyAqL1xyXG46aG9zdCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4uYXBwLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4ubWFpbi1jb250ZW50IHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgIHBhZGRpbmctdG9wOiA3MHB4OyAvLyBBY2NvdW50IGZvciBmaXhlZCBoZWFkZXJcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["ConnectionStatus","AppComponent","constructor","signalrService","networkService","offlineQueueService","authService","title","ngOnInit","router","events","pipe","filter","event","NavigationEnd","subscribe","setTimeout","window","scrollTo","status$","status","console","log","Online","isLoggedIn","initializeSignalRConnection","stopConnection","addEventListener","checkConnection","currentUser$","user","isOnline","startConnection","then","catch","err","error","i0","ɵɵdirectiveInject","i1","SignalrService","i2","NetworkService","i3","OfflineQueueService","i4","AuthService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\app.component.ts","C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\app.component.html"],"sourcesContent":["// src/app/app.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NetworkService, ConnectionStatus } from './services/network.service';\r\nimport { OfflineQueueService } from './services/offline-queue.service';\r\nimport { SignalrService } from './services/signalr.service';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Thrifto';\r\n\r\n  constructor(\r\n    private signalrService: SignalrService,\r\n    private networkService: NetworkService,\r\n    private offlineQueueService: OfflineQueueService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd)\r\n        ).subscribe(() => {\r\n            // Use setTimeout to ensure DOM is ready\r\n            setTimeout(() => {\r\n                 window.scrollTo(0, 0);\r\n          }, 0);\r\n      });\r\n    // Initialize network monitoring\r\n    this.networkService.status$.subscribe(status => {\r\n      console.log('Network status:', status);\r\n\r\n      // Manage SignalR connection based on network status\r\n      if (status === ConnectionStatus.Online && this.authService.isLoggedIn()) {\r\n        this.initializeSignalRConnection();\r\n      } else {\r\n        // Disconnect SignalR if network is down or server is down\r\n        this.signalrService.stopConnection();\r\n      }\r\n    });\r\n\r\n    // Setup window focus event to check connection when tab becomes active\r\n    window.addEventListener('focus', () => {\r\n      this.networkService.checkConnection();\r\n    });\r\n\r\n    // Listen for auth state changes to manage SignalR connection\r\n    this.authService.currentUser$.subscribe(user => {\r\n      if (user && this.networkService.isOnline) {\r\n        this.initializeSignalRConnection();\r\n      } else if (!user) {\r\n        this.signalrService.stopConnection();\r\n      }\r\n    });\r\n\r\n    // Initial connection if conditions are right\r\n    if (this.networkService.isOnline && this.authService.isLoggedIn()) {\r\n      this.initializeSignalRConnection();\r\n    }\r\n  }\r\n\r\n  private initializeSignalRConnection(): void {\r\n    this.signalrService.startConnection()\r\n      .then(() => console.log('SignalR connected successfully'))\r\n      .catch(err => console.error('Error connecting to SignalR:', err));\r\n  }\r\n}\r\n","<!-- src/app/app.component.html -->\r\n<div class=\"app-container\">\r\n    <app-header></app-header>\r\n    <main class=\"main-content\">\r\n        <router-outlet></router-outlet>\r\n    </main>\r\n    <app-footer></app-footer>\r\n</div>\r\n\r\n<app-network-status></app-network-status>\r\n<app-notification></app-notification>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}