{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartItemsSubject = new BehaviorSubject([]);\n    this.cartItems$ = this.cartItemsSubject.asObservable();\n    // Load cart from localStorage on startup\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      this.cartItemsSubject.next(JSON.parse(storedCart));\n    }\n  }\n  addToCart(listing) {\n    const currentItems = this.cartItemsSubject.value;\n    const existingItemIndex = currentItems.findIndex(item => item.listing.id === listing.id);\n    if (existingItemIndex === -1) {\n      // Only add if not already in cart\n      currentItems.push({\n        listing\n      });\n      this.cartItemsSubject.next([...currentItems]);\n      this.saveCartToStorage();\n    }\n    // If already in cart, do nothing\n  }\n\n  removeFromCart(listingId) {\n    const currentItems = this.cartItemsSubject.value;\n    const updatedItems = currentItems.filter(item => item.listing.id !== listingId);\n    this.cartItemsSubject.next(updatedItems);\n    this.saveCartToStorage();\n  }\n  // Removed updateQuantity method\n  clearCart() {\n    this.cartItemsSubject.next([]);\n    localStorage.removeItem('cart');\n  }\n  getTotal() {\n    return this.cartItemsSubject.value.reduce(\n    // Removed quantity multiplication\n    (total, item) => total + item.listing.price, 0);\n  }\n  getItemCount() {\n    // Simply return the number of items\n    return this.cartItemsSubject.value.length;\n  }\n  saveCartToStorage() {\n    localStorage.setItem('cart', JSON.stringify(this.cartItemsSubject.value));\n  }\n  static {\n    this.ɵfac = function CartService_Factory(t) {\n      return new (t || CartService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CartService,\n      factory: CartService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","CartService","constructor","cartItemsSubject","cartItems$","asObservable","storedCart","localStorage","getItem","next","JSON","parse","addToCart","listing","currentItems","value","existingItemIndex","findIndex","item","id","push","saveCartToStorage","removeFromCart","listingId","updatedItems","filter","clearCart","removeItem","getTotal","reduce","total","price","getItemCount","length","setItem","stringify","factory","ɵfac","providedIn"],"sources":["C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\services\\cart.service.ts"],"sourcesContent":["// src/app/services/cart.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Listing } from '../models/listing.model';\r\n\r\nexport interface CartItem {\r\n  listing: Listing;\r\n  // Removed quantity property\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private cartItemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  public cartItems$ = this.cartItemsSubject.asObservable();\r\n\r\n  constructor() {\r\n    // Load cart from localStorage on startup\r\n    const storedCart = localStorage.getItem('cart');\r\n    if (storedCart) {\r\n      this.cartItemsSubject.next(JSON.parse(storedCart));\r\n    }\r\n  }\r\n\r\n  addToCart(listing: Listing): void {\r\n    const currentItems = this.cartItemsSubject.value;\r\n    const existingItemIndex = currentItems.findIndex(item => item.listing.id === listing.id);\r\n\r\n    if (existingItemIndex === -1) {\r\n      // Only add if not already in cart\r\n      currentItems.push({ listing });\r\n      this.cartItemsSubject.next([...currentItems]);\r\n      this.saveCartToStorage();\r\n    }\r\n    // If already in cart, do nothing\r\n  }\r\n\r\n  removeFromCart(listingId: number): void {\r\n    const currentItems = this.cartItemsSubject.value;\r\n    const updatedItems = currentItems.filter(item => item.listing.id !== listingId);\r\n\r\n    this.cartItemsSubject.next(updatedItems);\r\n    this.saveCartToStorage();\r\n  }\r\n\r\n  // Removed updateQuantity method\r\n\r\n  clearCart(): void {\r\n    this.cartItemsSubject.next([]);\r\n    localStorage.removeItem('cart');\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.cartItemsSubject.value.reduce(\r\n      // Removed quantity multiplication\r\n      (total, item) => total + item.listing.price,\r\n      0\r\n    );\r\n  }\r\n\r\n  getItemCount(): number {\r\n    // Simply return the number of items\r\n    return this.cartItemsSubject.value.length;\r\n  }\r\n\r\n  private saveCartToStorage(): void {\r\n    localStorage.setItem('cart', JSON.stringify(this.cartItemsSubject.value));\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;;AAWlD,OAAM,MAAOC,WAAW;EAItBC,YAAA;IAHQ,KAAAC,gBAAgB,GAAG,IAAIH,eAAe,CAAa,EAAE,CAAC;IACvD,KAAAI,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IAGtD;IACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACd,IAAI,CAACH,gBAAgB,CAACM,IAAI,CAACC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;;EAEtD;EAEAM,SAASA,CAACC,OAAgB;IACxB,MAAMC,YAAY,GAAG,IAAI,CAACX,gBAAgB,CAACY,KAAK;IAChD,MAAMC,iBAAiB,GAAGF,YAAY,CAACG,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACL,OAAO,CAACM,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;IAExF,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC5B;MACAF,YAAY,CAACM,IAAI,CAAC;QAAEP;MAAO,CAAE,CAAC;MAC9B,IAAI,CAACV,gBAAgB,CAACM,IAAI,CAAC,CAAC,GAAGK,YAAY,CAAC,CAAC;MAC7C,IAAI,CAACO,iBAAiB,EAAE;;IAE1B;EACF;;EAEAC,cAAcA,CAACC,SAAiB;IAC9B,MAAMT,YAAY,GAAG,IAAI,CAACX,gBAAgB,CAACY,KAAK;IAChD,MAAMS,YAAY,GAAGV,YAAY,CAACW,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACL,OAAO,CAACM,EAAE,KAAKI,SAAS,CAAC;IAE/E,IAAI,CAACpB,gBAAgB,CAACM,IAAI,CAACe,YAAY,CAAC;IACxC,IAAI,CAACH,iBAAiB,EAAE;EAC1B;EAEA;EAEAK,SAASA,CAAA;IACP,IAAI,CAACvB,gBAAgB,CAACM,IAAI,CAAC,EAAE,CAAC;IAC9BF,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACzB,gBAAgB,CAACY,KAAK,CAACc,MAAM;IACvC;IACA,CAACC,KAAK,EAAEZ,IAAI,KAAKY,KAAK,GAAGZ,IAAI,CAACL,OAAO,CAACkB,KAAK,EAC3C,CAAC,CACF;EACH;EAEAC,YAAYA,CAAA;IACV;IACA,OAAO,IAAI,CAAC7B,gBAAgB,CAACY,KAAK,CAACkB,MAAM;EAC3C;EAEQZ,iBAAiBA,CAAA;IACvBd,YAAY,CAAC2B,OAAO,CAAC,MAAM,EAAExB,IAAI,CAACyB,SAAS,CAAC,IAAI,CAAChC,gBAAgB,CAACY,KAAK,CAAC,CAAC;EAC3E;;;uBAvDWd,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAmC,OAAA,EAAXnC,WAAW,CAAAoC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}