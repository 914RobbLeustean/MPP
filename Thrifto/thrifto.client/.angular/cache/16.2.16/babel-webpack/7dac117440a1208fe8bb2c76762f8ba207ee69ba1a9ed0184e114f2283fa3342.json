{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/chat.service\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"messageContainer\"];\nfunction ChatComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n}\nfunction ChatComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"p\");\n    i0.ɵɵtext(2, \"No conversations yet\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatComponent_div_8_div_1_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conversation_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", conversation_r6.unreadCount, \" \");\n  }\n}\nfunction ChatComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_8_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const conversation_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.selectConversation(conversation_r6));\n    });\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16)(4, \"div\", 17)(5, \"span\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 19);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 20);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, ChatComponent_div_8_div_1_div_11_Template, 2, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conversation_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"active\", (ctx_r5.activeConversation == null ? null : ctx_r5.activeConversation.userId) === conversation_r6.userId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", conversation_r6.username.charAt(0).toUpperCase(), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(conversation_r6.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.formatTime(conversation_r6.lastMessageTimestamp));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(conversation_r6.lastMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", conversation_r6.unreadCount > 0);\n  }\n}\nfunction ChatComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, ChatComponent_div_8_div_1_Template, 12, 7, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.conversations);\n  }\n}\nfunction ChatComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"p\");\n    i0.ɵɵtext(2, \"Select a conversation to start chatting\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatComponent_ng_container_11_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n}\nfunction ChatComponent_ng_container_11_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"p\");\n    i0.ɵɵtext(2, \"No messages yet. Start the conversation!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatComponent_ng_container_11_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"div\", 38);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 39);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"outgoing\", message_r15.isFromCurrentUser)(\"incoming\", !message_r15.isFromCurrentUser);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r15.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r14.formatTime(message_r15.timestamp));\n  }\n}\nfunction ChatComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 24)(2, \"div\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 25)(5, \"div\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 26, 27);\n    i0.ɵɵtemplate(9, ChatComponent_ng_container_11_div_9_Template, 1, 0, \"div\", 4);\n    i0.ɵɵtemplate(10, ChatComponent_ng_container_11_div_10_Template, 3, 0, \"div\", 28);\n    i0.ɵɵtemplate(11, ChatComponent_ng_container_11_div_11_Template, 5, 6, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 30)(13, \"input\", 31);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_ng_container_11_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.newMessage = $event);\n    })(\"keyup.enter\", function ChatComponent_ng_container_11_Template_input_keyup_enter_13_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.sendMessage());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function ChatComponent_ng_container_11_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.sendMessage());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(15, \"svg\", 33);\n    i0.ɵɵelement(16, \"line\", 34)(17, \"polygon\", 35);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.activeConversation.username.charAt(0).toUpperCase(), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.activeConversation.username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isLoadingMessages);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.isLoadingMessages && ctx_r4.messages.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.messages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.newMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r4.newMessage.trim());\n  }\n}\nexport class ChatComponent {\n  constructor(chatService, userService, route) {\n    this.chatService = chatService;\n    this.userService = userService;\n    this.route = route;\n    this.conversations = [];\n    this.activeConversation = null;\n    this.activeUser = null;\n    this.messages = [];\n    this.newMessage = '';\n    this.isLoadingConversations = true;\n    this.isLoadingMessages = false;\n  }\n  ngOnInit() {\n    this.loadConversations();\n    // Subscribe to real-time messages\n    this.chatService.onMessageReceived().subscribe(message => {\n      if (this.activeConversation && message.senderId === this.activeConversation.userId) {\n        this.messages.push(message);\n        this.scrollToBottom();\n      }\n      // Refresh conversations to update unread counts and last messages\n      this.loadConversations();\n    });\n    // Check if there's a user ID in the route params\n    this.route.params.subscribe(params => {\n      const userId = params['userId'];\n      if (userId) {\n        this.loadUserAndSelectConversation(userId);\n      }\n    });\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  loadConversations() {\n    this.isLoadingConversations = true;\n    this.chatService.getConversations().subscribe({\n      next: conversations => {\n        this.conversations = conversations;\n        this.isLoadingConversations = false;\n        // If there's an active conversation, update it with the new data\n        if (this.activeConversation) {\n          const updatedConversation = this.conversations.find(c => c.userId === this.activeConversation?.userId);\n          if (updatedConversation) {\n            this.activeConversation = updatedConversation;\n          }\n        }\n      },\n      error: error => {\n        console.error('Error loading conversations', error);\n        this.isLoadingConversations = false;\n      }\n    });\n  }\n  loadUserAndSelectConversation(userId) {\n    this.userService.getUserById(userId).subscribe({\n      next: user => {\n        this.activeUser = user;\n        // Check if there's an existing conversation with this user\n        const existingConversation = this.conversations.find(c => c.userId === userId);\n        if (existingConversation) {\n          this.selectConversation(existingConversation);\n        } else {\n          // Create a new conversation object\n          const newConversation = {\n            userId: user.id,\n            username: user.username,\n            lastMessage: '',\n            lastMessageTimestamp: new Date(),\n            unreadCount: 0\n          };\n          this.selectConversation(newConversation);\n        }\n      },\n      error: error => {\n        console.error('Error loading user', error);\n      }\n    });\n  }\n  selectConversation(conversation) {\n    this.activeConversation = conversation;\n    this.loadMessages();\n    // Mark messages as read if there are unread messages\n    if (conversation.unreadCount > 0) {\n      this.chatService.markAsRead(conversation.userId).subscribe({\n        next: () => {\n          conversation.unreadCount = 0;\n        },\n        error: error => {\n          console.error('Error marking messages as read', error);\n        }\n      });\n    }\n  }\n  loadMessages() {\n    if (!this.activeConversation) return;\n    this.isLoadingMessages = true;\n    this.chatService.getMessages(this.activeConversation.userId).subscribe({\n      next: messages => {\n        this.messages = messages;\n        this.isLoadingMessages = false;\n        this.scrollToBottom();\n      },\n      error: error => {\n        console.error('Error loading messages', error);\n        this.isLoadingMessages = false;\n      }\n    });\n  }\n  sendMessage() {\n    if (!this.newMessage.trim() || !this.activeConversation) return;\n    // Send via WebSocket for real-time updates\n    this.chatService.sendMessageViaSocket(this.activeConversation.userId, this.newMessage);\n    // Also send via HTTP for persistence\n    this.chatService.sendMessage(this.activeConversation.userId, this.newMessage).subscribe({\n      next: message => {\n        this.messages.push(message);\n        // Update the active conversation's last message\n        if (this.activeConversation) {\n          this.activeConversation.lastMessage = message.content;\n          this.activeConversation.lastMessageTimestamp = message.timestamp;\n        }\n        this.newMessage = '';\n        this.scrollToBottom();\n      },\n      error: error => {\n        console.error('Error sending message', error);\n      }\n    });\n  }\n  scrollToBottom() {\n    try {\n      if (this.messageContainer) {\n        this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n      }\n    } catch (err) {}\n  }\n  formatTime(date) {\n    return new Date(date).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n  static {\n    this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      viewQuery: function ChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageContainer = _t.first);\n        }\n      },\n      decls: 12,\n      vars: 5,\n      consts: [[1, \"container\"], [1, \"chat-container\"], [1, \"conversations-sidebar\"], [1, \"sidebar-header\"], [\"class\", \"loading-spinner\", 4, \"ngIf\"], [\"class\", \"no-conversations\", 4, \"ngIf\"], [\"class\", \"conversation-list\", 4, \"ngIf\"], [1, \"chat-main\"], [\"class\", \"empty-state\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"loading-spinner\"], [1, \"no-conversations\"], [1, \"conversation-list\"], [\"class\", \"conversation-item\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"conversation-item\", 3, \"click\"], [1, \"user-avatar\"], [1, \"conversation-info\"], [1, \"conversation-header\"], [1, \"username\"], [1, \"time\"], [1, \"last-message\"], [\"class\", \"unread-badge\", 4, \"ngIf\"], [1, \"unread-badge\"], [1, \"empty-state\"], [1, \"chat-header\"], [1, \"user-info\"], [1, \"chat-messages\"], [\"messageContainer\", \"\"], [\"class\", \"no-messages\", 4, \"ngIf\"], [\"class\", \"message\", 3, \"outgoing\", \"incoming\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat-input\"], [\"type\", \"text\", \"placeholder\", \"Type a message...\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"send-btn\", 3, \"disabled\", \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"20\", \"height\", \"20\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"x1\", \"22\", \"y1\", \"2\", \"x2\", \"11\", \"y2\", \"13\"], [\"points\", \"22 2 15 22 11 13 2 9 22 2\"], [1, \"no-messages\"], [1, \"message\"], [1, \"message-content\"], [1, \"message-time\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n          i0.ɵɵtext(5, \"Messages\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(6, ChatComponent_div_6_Template, 1, 0, \"div\", 4);\n          i0.ɵɵtemplate(7, ChatComponent_div_7_Template, 3, 0, \"div\", 5);\n          i0.ɵɵtemplate(8, ChatComponent_div_8_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵtemplate(10, ChatComponent_div_10_Template, 3, 0, \"div\", 8);\n          i0.ɵɵtemplate(11, ChatComponent_ng_container_11_Template, 18, 7, \"ng-container\", 9);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoadingConversations);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoadingConversations && ctx.conversations.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoadingConversations && ctx.conversations.length > 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.activeConversation);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.activeConversation);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n      styles: [\"\\n\\n.container[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 40px 20px;\\n}\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: calc(80vh - 60px);\\n  min-height: 500px;\\n  background-color: white;\\n  border-radius: 8px;\\n  overflow: hidden;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n}\\n@media (max-width: 768px) {\\n  .chat-container[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    height: calc(90vh - 60px);\\n  }\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%] {\\n  width: 300px;\\n  border-right: 1px solid #f0f0f0;\\n  display: flex;\\n  flex-direction: column;\\n  background-color: #f9f9f9;\\n}\\n@media (max-width: 768px) {\\n  .chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%] {\\n    width: 100%;\\n    height: 30%;\\n    border-right: none;\\n    border-bottom: 1px solid #f0f0f0;\\n  }\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .sidebar-header[_ngcontent-%COMP%] {\\n  padding: 15px;\\n  border-bottom: 1px solid #f0f0f0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .sidebar-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 18px;\\n  color: #333;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .loading-spinner[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex: 1;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .loading-spinner[_ngcontent-%COMP%]:after {\\n  content: \\\"\\\";\\n  width: 30px;\\n  height: 30px;\\n  border: 3px solid #f3f3f3;\\n  border-top: 3px solid #a83939;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .no-conversations[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #666;\\n  text-align: center;\\n  padding: 20px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow-y: auto;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  padding: 15px;\\n  border-bottom: 1px solid #f0f0f0;\\n  cursor: pointer;\\n  position: relative;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]:hover {\\n  background-color: #f0f0f0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item.active[_ngcontent-%COMP%] {\\n  background-color: #f0f0f0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  background-color: #a83939;\\n  color: white;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-weight: 600;\\n  margin-right: 10px;\\n  flex-shrink: 0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]   .conversation-info[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-width: 0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]   .conversation-info[_ngcontent-%COMP%]   .conversation-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-bottom: 5px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]   .conversation-info[_ngcontent-%COMP%]   .conversation-header[_ngcontent-%COMP%]   .username[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  color: #333;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]   .conversation-info[_ngcontent-%COMP%]   .conversation-header[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  color: #999;\\n  white-space: nowrap;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]   .conversation-info[_ngcontent-%COMP%]   .last-message[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #666;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n.chat-container[_ngcontent-%COMP%]   .conversations-sidebar[_ngcontent-%COMP%]   .conversation-list[_ngcontent-%COMP%]   .conversation-item[_ngcontent-%COMP%]   .unread-badge[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15px;\\n  right: 15px;\\n  min-width: 20px;\\n  height: 20px;\\n  border-radius: 10px;\\n  background-color: #a83939;\\n  color: white;\\n  font-size: 12px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0 5px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  background-color: white;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #666;\\n  text-align: center;\\n  padding: 20px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-header[_ngcontent-%COMP%] {\\n  padding: 10px 15px;\\n  display: flex;\\n  align-items: center;\\n  border-bottom: 1px solid #f0f0f0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-header[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  background-color: #a83939;\\n  color: white;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-weight: 600;\\n  margin-right: 10px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-header[_ngcontent-%COMP%]   .user-info[_ngcontent-%COMP%]   .username[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  color: #333;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 20px;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column;\\n  background-color: #f9f9f9;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .loading-spinner[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 20px 0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .loading-spinner[_ngcontent-%COMP%]:after {\\n  content: \\\"\\\";\\n  width: 30px;\\n  height: 30px;\\n  border: 3px solid #f3f3f3;\\n  border-top: 3px solid #a83939;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .no-messages[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: #666;\\n  text-align: center;\\n  padding: 20px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%] {\\n  max-width: 70%;\\n  margin-bottom: 15px;\\n  padding: 12px 15px;\\n  border-radius: 18px;\\n  position: relative;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .message.incoming[_ngcontent-%COMP%] {\\n  align-self: flex-start;\\n  background-color: white;\\n  color: #333;\\n  border-bottom-left-radius: 5px;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .message.incoming[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n  color: #999;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .message.outgoing[_ngcontent-%COMP%] {\\n  align-self: flex-end;\\n  background-color: #a83939;\\n  color: white;\\n  border-bottom-right-radius: 5px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .message.outgoing[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n  color: rgba(255, 255, 255, 0.7);\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%] {\\n  word-wrap: break-word;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-messages[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  margin-top: 5px;\\n  text-align: right;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-input[_ngcontent-%COMP%] {\\n  display: flex;\\n  padding: 15px;\\n  border-top: 1px solid #f0f0f0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 10px 15px;\\n  border: 1px solid #ddd;\\n  border-radius: 20px;\\n  outline: none;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  border-color: #a83939;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-input[_ngcontent-%COMP%]   .send-btn[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  margin-left: 10px;\\n  background-color: #a83939;\\n  color: white;\\n  border: none;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-input[_ngcontent-%COMP%]   .send-btn[_ngcontent-%COMP%]:hover {\\n  background-color: #822c2c;\\n}\\n.chat-container[_ngcontent-%COMP%]   .chat-main[_ngcontent-%COMP%]   .chat-input[_ngcontent-%COMP%]   .send-btn[_ngcontent-%COMP%]:disabled {\\n  background-color: #ccc;\\n  cursor: not-allowed;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","conversation_r6","unreadCount","ɵɵlistener","ChatComponent_div_8_div_1_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r10","$implicit","ctx_r9","ɵɵnextContext","ɵɵresetView","selectConversation","ɵɵtemplate","ChatComponent_div_8_div_1_div_11_Template","ɵɵclassProp","ctx_r5","activeConversation","userId","username","charAt","toUpperCase","ɵɵtextInterpolate","formatTime","lastMessageTimestamp","lastMessage","ɵɵproperty","ChatComponent_div_8_div_1_Template","ctx_r2","conversations","message_r15","isFromCurrentUser","content","ctx_r14","timestamp","ɵɵelementContainerStart","ChatComponent_ng_container_11_div_9_Template","ChatComponent_ng_container_11_div_10_Template","ChatComponent_ng_container_11_div_11_Template","ChatComponent_ng_container_11_Template_input_ngModelChange_13_listener","$event","_r17","ctx_r16","newMessage","ChatComponent_ng_container_11_Template_input_keyup_enter_13_listener","ctx_r18","sendMessage","ChatComponent_ng_container_11_Template_button_click_14_listener","ctx_r19","ɵɵnamespaceSVG","ɵɵelementContainerEnd","ctx_r4","isLoadingMessages","messages","length","trim","ChatComponent","constructor","chatService","userService","route","activeUser","isLoadingConversations","ngOnInit","loadConversations","onMessageReceived","subscribe","message","senderId","push","scrollToBottom","params","loadUserAndSelectConversation","ngAfterViewChecked","getConversations","next","updatedConversation","find","c","error","console","getUserById","user","existingConversation","newConversation","id","Date","conversation","loadMessages","markAsRead","getMessages","sendMessageViaSocket","messageContainer","nativeElement","scrollTop","scrollHeight","err","date","toLocaleTimeString","hour","minute","ɵɵdirectiveInject","i1","ChatService","i2","UserService","i3","ActivatedRoute","selectors","viewQuery","ChatComponent_Query","rf","ctx","ChatComponent_div_6_Template","ChatComponent_div_7_Template","ChatComponent_div_8_Template","ChatComponent_div_10_Template","ChatComponent_ng_container_11_Template"],"sources":["C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\components\\chat\\chat.component.ts","C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\components\\chat\\chat.component.html"],"sourcesContent":["// src/app/components/chat/chat.component.ts\r\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { ChatMessage, Conversation } from '../../models/chat-message.model';\r\nimport { User } from '../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit, AfterViewChecked {\r\n  @ViewChild('messageContainer') private messageContainer!: ElementRef;\r\n\r\n  conversations: Conversation[] = [];\r\n  activeConversation: Conversation | null = null;\r\n  activeUser: User | null = null;\r\n  messages: ChatMessage[] = [];\r\n  newMessage: string = '';\r\n\r\n  isLoadingConversations = true;\r\n  isLoadingMessages = false;\r\n\r\n  constructor(\r\n    private chatService: ChatService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadConversations();\r\n\r\n    // Subscribe to real-time messages\r\n    this.chatService.onMessageReceived().subscribe(message => {\r\n      if (this.activeConversation && message.senderId === this.activeConversation.userId) {\r\n        this.messages.push(message);\r\n        this.scrollToBottom();\r\n      }\r\n\r\n      // Refresh conversations to update unread counts and last messages\r\n      this.loadConversations();\r\n    });\r\n\r\n    // Check if there's a user ID in the route params\r\n    this.route.params.subscribe(params => {\r\n      const userId = params['userId'];\r\n      if (userId) {\r\n        this.loadUserAndSelectConversation(userId);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  loadConversations(): void {\r\n    this.isLoadingConversations = true;\r\n\r\n    this.chatService.getConversations().subscribe({\r\n      next: (conversations) => {\r\n        this.conversations = conversations;\r\n        this.isLoadingConversations = false;\r\n\r\n        // If there's an active conversation, update it with the new data\r\n        if (this.activeConversation) {\r\n          const updatedConversation = this.conversations.find(c => c.userId === this.activeConversation?.userId);\r\n          if (updatedConversation) {\r\n            this.activeConversation = updatedConversation;\r\n          }\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading conversations', error);\r\n        this.isLoadingConversations = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadUserAndSelectConversation(userId: string): void {\r\n    this.userService.getUserById(userId).subscribe({\r\n      next: (user) => {\r\n        this.activeUser = user;\r\n\r\n        // Check if there's an existing conversation with this user\r\n        const existingConversation = this.conversations.find(c => c.userId === userId);\r\n\r\n        if (existingConversation) {\r\n          this.selectConversation(existingConversation);\r\n        } else {\r\n          // Create a new conversation object\r\n          const newConversation: Conversation = {\r\n            userId: user.id,\r\n            username: user.username,\r\n            lastMessage: '',\r\n            lastMessageTimestamp: new Date(),\r\n            unreadCount: 0\r\n          };\r\n\r\n          this.selectConversation(newConversation);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading user', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectConversation(conversation: Conversation): void {\r\n    this.activeConversation = conversation;\r\n    this.loadMessages();\r\n\r\n    // Mark messages as read if there are unread messages\r\n    if (conversation.unreadCount > 0) {\r\n      this.chatService.markAsRead(conversation.userId).subscribe({\r\n        next: () => {\r\n          conversation.unreadCount = 0;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error marking messages as read', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  loadMessages(): void {\r\n    if (!this.activeConversation) return;\r\n\r\n    this.isLoadingMessages = true;\r\n\r\n    this.chatService.getMessages(this.activeConversation.userId).subscribe({\r\n      next: (messages) => {\r\n        this.messages = messages;\r\n        this.isLoadingMessages = false;\r\n        this.scrollToBottom();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading messages', error);\r\n        this.isLoadingMessages = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage(): void {\r\n    if (!this.newMessage.trim() || !this.activeConversation) return;\r\n\r\n    // Send via WebSocket for real-time updates\r\n    this.chatService.sendMessageViaSocket(this.activeConversation.userId, this.newMessage);\r\n\r\n    // Also send via HTTP for persistence\r\n    this.chatService.sendMessage(this.activeConversation.userId, this.newMessage).subscribe({\r\n      next: (message) => {\r\n        this.messages.push(message);\r\n\r\n        // Update the active conversation's last message\r\n        if (this.activeConversation) {\r\n          this.activeConversation.lastMessage = message.content;\r\n          this.activeConversation.lastMessageTimestamp = message.timestamp;\r\n        }\r\n\r\n        this.newMessage = '';\r\n        this.scrollToBottom();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error sending message', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    try {\r\n      if (this.messageContainer) {\r\n        this.messageContainer.nativeElement.scrollTop =\r\n          this.messageContainer.nativeElement.scrollHeight;\r\n      }\r\n    } catch (err) { }\r\n  }\r\n\r\n  formatTime(date: Date): string {\r\n    return new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n}\r\n","<!-- src/app/components/chat/chat.component.html -->\r\n<div class=\"container\">\r\n  <div class=\"chat-container\">\r\n    <div class=\"conversations-sidebar\">\r\n      <div class=\"sidebar-header\">\r\n        <h2>Messages</h2>\r\n      </div>\r\n\r\n      <div class=\"loading-spinner\" *ngIf=\"isLoadingConversations\"></div>\r\n\r\n      <div class=\"no-conversations\" *ngIf=\"!isLoadingConversations && conversations.length === 0\">\r\n        <p>No conversations yet</p>\r\n      </div>\r\n\r\n      <div class=\"conversation-list\" *ngIf=\"!isLoadingConversations && conversations.length > 0\">\r\n        <div *ngFor=\"let conversation of conversations\"\r\n             class=\"conversation-item\"\r\n             [class.active]=\"activeConversation?.userId === conversation.userId\"\r\n             (click)=\"selectConversation(conversation)\">\r\n          <div class=\"user-avatar\">\r\n            {{ conversation.username.charAt(0).toUpperCase() }}\r\n          </div>\r\n          <div class=\"conversation-info\">\r\n            <div class=\"conversation-header\">\r\n              <span class=\"username\">{{ conversation.username }}</span>\r\n              <span class=\"time\">{{ formatTime(conversation.lastMessageTimestamp) }}</span>\r\n            </div>\r\n            <div class=\"last-message\">{{ conversation.lastMessage }}</div>\r\n          </div>\r\n          <div class=\"unread-badge\" *ngIf=\"conversation.unreadCount > 0\">\r\n            {{ conversation.unreadCount }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"chat-main\">\r\n      <div class=\"empty-state\" *ngIf=\"!activeConversation\">\r\n        <p>Select a conversation to start chatting</p>\r\n      </div>\r\n\r\n      <ng-container *ngIf=\"activeConversation\">\r\n        <div class=\"chat-header\">\r\n          <div class=\"user-avatar\">\r\n            {{ activeConversation.username.charAt(0).toUpperCase() }}\r\n          </div>\r\n          <div class=\"user-info\">\r\n            <div class=\"username\">{{ activeConversation.username }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-messages\" #messageContainer>\r\n          <div class=\"loading-spinner\" *ngIf=\"isLoadingMessages\"></div>\r\n\r\n          <div class=\"no-messages\" *ngIf=\"!isLoadingMessages && messages.length === 0\">\r\n            <p>No messages yet. Start the conversation!</p>\r\n          </div>\r\n\r\n          <div *ngFor=\"let message of messages\"\r\n               class=\"message\"\r\n               [class.outgoing]=\"message.isFromCurrentUser\"\r\n               [class.incoming]=\"!message.isFromCurrentUser\">\r\n            <div class=\"message-content\">{{ message.content }}</div>\r\n            <div class=\"message-time\">{{ formatTime(message.timestamp) }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-input\">\r\n          <input type=\"text\"\r\n                 placeholder=\"Type a message...\"\r\n                 [(ngModel)]=\"newMessage\"\r\n                 (keyup.enter)=\"sendMessage()\">\r\n          <button class=\"send-btn\" [disabled]=\"!newMessage.trim()\" (click)=\"sendMessage()\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n              <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n              <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":";;;;;;;;;ICQMA,EAAA,CAAAC,SAAA,cAAkE;;;;;IAElED,EAAA,CAAAE,cAAA,cAA4F;IACvFF,EAAA,CAAAG,MAAA,2BAAoB;IAAAH,EAAA,CAAAI,YAAA,EAAI;;;;;IAkBzBJ,EAAA,CAAAE,cAAA,cAA+D;IAC7DF,EAAA,CAAAG,MAAA,GACF;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;IADJJ,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAM,kBAAA,MAAAC,eAAA,CAAAC,WAAA,MACF;;;;;;IAhBFR,EAAA,CAAAE,cAAA,cAGgD;IAA3CF,EAAA,CAAAS,UAAA,mBAAAC,wDAAA;MAAA,MAAAC,WAAA,GAAAX,EAAA,CAAAY,aAAA,CAAAC,IAAA;MAAA,MAAAN,eAAA,GAAAI,WAAA,CAAAG,SAAA;MAAA,MAAAC,MAAA,GAAAf,EAAA,CAAAgB,aAAA;MAAA,OAAShB,EAAA,CAAAiB,WAAA,CAAAF,MAAA,CAAAG,kBAAA,CAAAX,eAAA,CAAgC;IAAA,EAAC;IAC7CP,EAAA,CAAAE,cAAA,cAAyB;IACvBF,EAAA,CAAAG,MAAA,GACF;IAAAH,EAAA,CAAAI,YAAA,EAAM;IACNJ,EAAA,CAAAE,cAAA,cAA+B;IAEJF,EAAA,CAAAG,MAAA,GAA2B;IAAAH,EAAA,CAAAI,YAAA,EAAO;IACzDJ,EAAA,CAAAE,cAAA,eAAmB;IAAAF,EAAA,CAAAG,MAAA,GAAmD;IAAAH,EAAA,CAAAI,YAAA,EAAO;IAE/EJ,EAAA,CAAAE,cAAA,cAA0B;IAAAF,EAAA,CAAAG,MAAA,IAA8B;IAAAH,EAAA,CAAAI,YAAA,EAAM;IAEhEJ,EAAA,CAAAmB,UAAA,KAAAC,yCAAA,kBAEM;IACRpB,EAAA,CAAAI,YAAA,EAAM;;;;;IAfDJ,EAAA,CAAAqB,WAAA,YAAAC,MAAA,CAAAC,kBAAA,kBAAAD,MAAA,CAAAC,kBAAA,CAAAC,MAAA,MAAAjB,eAAA,CAAAiB,MAAA,CAAmE;IAGpExB,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAM,kBAAA,MAAAC,eAAA,CAAAkB,QAAA,CAAAC,MAAA,IAAAC,WAAA,QACF;IAG2B3B,EAAA,CAAAK,SAAA,GAA2B;IAA3BL,EAAA,CAAA4B,iBAAA,CAAArB,eAAA,CAAAkB,QAAA,CAA2B;IAC/BzB,EAAA,CAAAK,SAAA,GAAmD;IAAnDL,EAAA,CAAA4B,iBAAA,CAAAN,MAAA,CAAAO,UAAA,CAAAtB,eAAA,CAAAuB,oBAAA,EAAmD;IAE9C9B,EAAA,CAAAK,SAAA,GAA8B;IAA9BL,EAAA,CAAA4B,iBAAA,CAAArB,eAAA,CAAAwB,WAAA,CAA8B;IAE/B/B,EAAA,CAAAK,SAAA,GAAkC;IAAlCL,EAAA,CAAAgC,UAAA,SAAAzB,eAAA,CAAAC,WAAA,KAAkC;;;;;IAfjER,EAAA,CAAAE,cAAA,cAA2F;IACzFF,EAAA,CAAAmB,UAAA,IAAAc,kCAAA,mBAiBM;IACRjC,EAAA,CAAAI,YAAA,EAAM;;;;IAlB0BJ,EAAA,CAAAK,SAAA,GAAgB;IAAhBL,EAAA,CAAAgC,UAAA,YAAAE,MAAA,CAAAC,aAAA,CAAgB;;;;;IAsBhDnC,EAAA,CAAAE,cAAA,cAAqD;IAChDF,EAAA,CAAAG,MAAA,8CAAuC;IAAAH,EAAA,CAAAI,YAAA,EAAI;;;;;IAc5CJ,EAAA,CAAAC,SAAA,cAA6D;;;;;IAE7DD,EAAA,CAAAE,cAAA,cAA6E;IACxEF,EAAA,CAAAG,MAAA,+CAAwC;IAAAH,EAAA,CAAAI,YAAA,EAAI;;;;;IAGjDJ,EAAA,CAAAE,cAAA,cAGmD;IACpBF,EAAA,CAAAG,MAAA,GAAqB;IAAAH,EAAA,CAAAI,YAAA,EAAM;IACxDJ,EAAA,CAAAE,cAAA,cAA0B;IAAAF,EAAA,CAAAG,MAAA,GAAmC;IAAAH,EAAA,CAAAI,YAAA,EAAM;;;;;IAHhEJ,EAAA,CAAAqB,WAAA,aAAAe,WAAA,CAAAC,iBAAA,CAA4C,cAAAD,WAAA,CAAAC,iBAAA;IAElBrC,EAAA,CAAAK,SAAA,GAAqB;IAArBL,EAAA,CAAA4B,iBAAA,CAAAQ,WAAA,CAAAE,OAAA,CAAqB;IACxBtC,EAAA,CAAAK,SAAA,GAAmC;IAAnCL,EAAA,CAAA4B,iBAAA,CAAAW,OAAA,CAAAV,UAAA,CAAAO,WAAA,CAAAI,SAAA,EAAmC;;;;;;IAtBnExC,EAAA,CAAAyC,uBAAA,GAAyC;IACvCzC,EAAA,CAAAE,cAAA,cAAyB;IAErBF,EAAA,CAAAG,MAAA,GACF;IAAAH,EAAA,CAAAI,YAAA,EAAM;IACNJ,EAAA,CAAAE,cAAA,cAAuB;IACCF,EAAA,CAAAG,MAAA,GAAiC;IAAAH,EAAA,CAAAI,YAAA,EAAM;IAIjEJ,EAAA,CAAAE,cAAA,kBAA6C;IAC3CF,EAAA,CAAAmB,UAAA,IAAAuB,4CAAA,iBAA6D;IAE7D1C,EAAA,CAAAmB,UAAA,KAAAwB,6CAAA,kBAEM;IAEN3C,EAAA,CAAAmB,UAAA,KAAAyB,6CAAA,kBAMM;IACR5C,EAAA,CAAAI,YAAA,EAAM;IAENJ,EAAA,CAAAE,cAAA,eAAwB;IAGfF,EAAA,CAAAS,UAAA,2BAAAoC,uEAAAC,MAAA;MAAA9C,EAAA,CAAAY,aAAA,CAAAmC,IAAA;MAAA,MAAAC,OAAA,GAAAhD,EAAA,CAAAgB,aAAA;MAAA,OAAAhB,EAAA,CAAAiB,WAAA,CAAA+B,OAAA,CAAAC,UAAA,GAAAH,MAAA;IAAA,EAAwB,yBAAAI,qEAAA;MAAAlD,EAAA,CAAAY,aAAA,CAAAmC,IAAA;MAAA,MAAAI,OAAA,GAAAnD,EAAA,CAAAgB,aAAA;MAAA,OACThB,EAAA,CAAAiB,WAAA,CAAAkC,OAAA,CAAAC,WAAA,EAAa;IAAA,EADJ;IAF/BpD,EAAA,CAAAI,YAAA,EAGqC;IACrCJ,EAAA,CAAAE,cAAA,kBAAiF;IAAxBF,EAAA,CAAAS,UAAA,mBAAA4C,gEAAA;MAAArD,EAAA,CAAAY,aAAA,CAAAmC,IAAA;MAAA,MAAAO,OAAA,GAAAtD,EAAA,CAAAgB,aAAA;MAAA,OAAShB,EAAA,CAAAiB,WAAA,CAAAqC,OAAA,CAAAF,WAAA,EAAa;IAAA,EAAC;IAC9EpD,EAAA,CAAAuD,cAAA,EAAqL;IAArLvD,EAAA,CAAAE,cAAA,eAAqL;IACnLF,EAAA,CAAAC,SAAA,gBAA4C;IAE9CD,EAAA,CAAAI,YAAA,EAAM;IAGZJ,EAAA,CAAAwD,qBAAA,EAAe;;;;IAnCTxD,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAM,kBAAA,MAAAmD,MAAA,CAAAlC,kBAAA,CAAAE,QAAA,CAAAC,MAAA,IAAAC,WAAA,QACF;IAEwB3B,EAAA,CAAAK,SAAA,GAAiC;IAAjCL,EAAA,CAAA4B,iBAAA,CAAA6B,MAAA,CAAAlC,kBAAA,CAAAE,QAAA,CAAiC;IAK3BzB,EAAA,CAAAK,SAAA,GAAuB;IAAvBL,EAAA,CAAAgC,UAAA,SAAAyB,MAAA,CAAAC,iBAAA,CAAuB;IAE3B1D,EAAA,CAAAK,SAAA,GAAiD;IAAjDL,EAAA,CAAAgC,UAAA,UAAAyB,MAAA,CAAAC,iBAAA,IAAAD,MAAA,CAAAE,QAAA,CAAAC,MAAA,OAAiD;IAIlD5D,EAAA,CAAAK,SAAA,GAAW;IAAXL,EAAA,CAAAgC,UAAA,YAAAyB,MAAA,CAAAE,QAAA,CAAW;IAY7B3D,EAAA,CAAAK,SAAA,GAAwB;IAAxBL,EAAA,CAAAgC,UAAA,YAAAyB,MAAA,CAAAR,UAAA,CAAwB;IAENjD,EAAA,CAAAK,SAAA,GAA+B;IAA/BL,EAAA,CAAAgC,UAAA,cAAAyB,MAAA,CAAAR,UAAA,CAAAY,IAAA,GAA+B;;;AD3DlE,OAAM,MAAOC,aAAa;EAYxBC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,KAAqB;IAFrB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IAZf,KAAA/B,aAAa,GAAmB,EAAE;IAClC,KAAAZ,kBAAkB,GAAwB,IAAI;IAC9C,KAAA4C,UAAU,GAAgB,IAAI;IAC9B,KAAAR,QAAQ,GAAkB,EAAE;IAC5B,KAAAV,UAAU,GAAW,EAAE;IAEvB,KAAAmB,sBAAsB,GAAG,IAAI;IAC7B,KAAAV,iBAAiB,GAAG,KAAK;EAMrB;EAEJW,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;IAExB;IACA,IAAI,CAACN,WAAW,CAACO,iBAAiB,EAAE,CAACC,SAAS,CAACC,OAAO,IAAG;MACvD,IAAI,IAAI,CAAClD,kBAAkB,IAAIkD,OAAO,CAACC,QAAQ,KAAK,IAAI,CAACnD,kBAAkB,CAACC,MAAM,EAAE;QAClF,IAAI,CAACmC,QAAQ,CAACgB,IAAI,CAACF,OAAO,CAAC;QAC3B,IAAI,CAACG,cAAc,EAAE;;MAGvB;MACA,IAAI,CAACN,iBAAiB,EAAE;IAC1B,CAAC,CAAC;IAEF;IACA,IAAI,CAACJ,KAAK,CAACW,MAAM,CAACL,SAAS,CAACK,MAAM,IAAG;MACnC,MAAMrD,MAAM,GAAGqD,MAAM,CAAC,QAAQ,CAAC;MAC/B,IAAIrD,MAAM,EAAE;QACV,IAAI,CAACsD,6BAA6B,CAACtD,MAAM,CAAC;;IAE9C,CAAC,CAAC;EACJ;EAEAuD,kBAAkBA,CAAA;IAChB,IAAI,CAACH,cAAc,EAAE;EACvB;EAEAN,iBAAiBA,CAAA;IACf,IAAI,CAACF,sBAAsB,GAAG,IAAI;IAElC,IAAI,CAACJ,WAAW,CAACgB,gBAAgB,EAAE,CAACR,SAAS,CAAC;MAC5CS,IAAI,EAAG9C,aAAa,IAAI;QACtB,IAAI,CAACA,aAAa,GAAGA,aAAa;QAClC,IAAI,CAACiC,sBAAsB,GAAG,KAAK;QAEnC;QACA,IAAI,IAAI,CAAC7C,kBAAkB,EAAE;UAC3B,MAAM2D,mBAAmB,GAAG,IAAI,CAAC/C,aAAa,CAACgD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC5D,MAAM,KAAK,IAAI,CAACD,kBAAkB,EAAEC,MAAM,CAAC;UACtG,IAAI0D,mBAAmB,EAAE;YACvB,IAAI,CAAC3D,kBAAkB,GAAG2D,mBAAmB;;;MAGnD,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,IAAI,CAACjB,sBAAsB,GAAG,KAAK;MACrC;KACD,CAAC;EACJ;EAEAU,6BAA6BA,CAACtD,MAAc;IAC1C,IAAI,CAACyC,WAAW,CAACsB,WAAW,CAAC/D,MAAM,CAAC,CAACgD,SAAS,CAAC;MAC7CS,IAAI,EAAGO,IAAI,IAAI;QACb,IAAI,CAACrB,UAAU,GAAGqB,IAAI;QAEtB;QACA,MAAMC,oBAAoB,GAAG,IAAI,CAACtD,aAAa,CAACgD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC5D,MAAM,KAAKA,MAAM,CAAC;QAE9E,IAAIiE,oBAAoB,EAAE;UACxB,IAAI,CAACvE,kBAAkB,CAACuE,oBAAoB,CAAC;SAC9C,MAAM;UACL;UACA,MAAMC,eAAe,GAAiB;YACpClE,MAAM,EAAEgE,IAAI,CAACG,EAAE;YACflE,QAAQ,EAAE+D,IAAI,CAAC/D,QAAQ;YACvBM,WAAW,EAAE,EAAE;YACfD,oBAAoB,EAAE,IAAI8D,IAAI,EAAE;YAChCpF,WAAW,EAAE;WACd;UAED,IAAI,CAACU,kBAAkB,CAACwE,eAAe,CAAC;;MAE5C,CAAC;MACDL,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;KACD,CAAC;EACJ;EAEAnE,kBAAkBA,CAAC2E,YAA0B;IAC3C,IAAI,CAACtE,kBAAkB,GAAGsE,YAAY;IACtC,IAAI,CAACC,YAAY,EAAE;IAEnB;IACA,IAAID,YAAY,CAACrF,WAAW,GAAG,CAAC,EAAE;MAChC,IAAI,CAACwD,WAAW,CAAC+B,UAAU,CAACF,YAAY,CAACrE,MAAM,CAAC,CAACgD,SAAS,CAAC;QACzDS,IAAI,EAAEA,CAAA,KAAK;UACTY,YAAY,CAACrF,WAAW,GAAG,CAAC;QAC9B,CAAC;QACD6E,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD;OACD,CAAC;;EAEN;EAEAS,YAAYA,CAAA;IACV,IAAI,CAAC,IAAI,CAACvE,kBAAkB,EAAE;IAE9B,IAAI,CAACmC,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACM,WAAW,CAACgC,WAAW,CAAC,IAAI,CAACzE,kBAAkB,CAACC,MAAM,CAAC,CAACgD,SAAS,CAAC;MACrES,IAAI,EAAGtB,QAAQ,IAAI;QACjB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACD,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACkB,cAAc,EAAE;MACvB,CAAC;MACDS,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAI,CAAC3B,iBAAiB,GAAG,KAAK;MAChC;KACD,CAAC;EACJ;EAEAN,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACH,UAAU,CAACY,IAAI,EAAE,IAAI,CAAC,IAAI,CAACtC,kBAAkB,EAAE;IAEzD;IACA,IAAI,CAACyC,WAAW,CAACiC,oBAAoB,CAAC,IAAI,CAAC1E,kBAAkB,CAACC,MAAM,EAAE,IAAI,CAACyB,UAAU,CAAC;IAEtF;IACA,IAAI,CAACe,WAAW,CAACZ,WAAW,CAAC,IAAI,CAAC7B,kBAAkB,CAACC,MAAM,EAAE,IAAI,CAACyB,UAAU,CAAC,CAACuB,SAAS,CAAC;MACtFS,IAAI,EAAGR,OAAO,IAAI;QAChB,IAAI,CAACd,QAAQ,CAACgB,IAAI,CAACF,OAAO,CAAC;QAE3B;QACA,IAAI,IAAI,CAAClD,kBAAkB,EAAE;UAC3B,IAAI,CAACA,kBAAkB,CAACQ,WAAW,GAAG0C,OAAO,CAACnC,OAAO;UACrD,IAAI,CAACf,kBAAkB,CAACO,oBAAoB,GAAG2C,OAAO,CAACjC,SAAS;;QAGlE,IAAI,CAACS,UAAU,GAAG,EAAE;QACpB,IAAI,CAAC2B,cAAc,EAAE;MACvB,CAAC;MACDS,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;KACD,CAAC;EACJ;EAEAT,cAAcA,CAAA;IACZ,IAAI;MACF,IAAI,IAAI,CAACsB,gBAAgB,EAAE;QACzB,IAAI,CAACA,gBAAgB,CAACC,aAAa,CAACC,SAAS,GAC3C,IAAI,CAACF,gBAAgB,CAACC,aAAa,CAACE,YAAY;;KAErD,CAAC,OAAOC,GAAG,EAAE;EAChB;EAEAzE,UAAUA,CAAC0E,IAAU;IACnB,OAAO,IAAIX,IAAI,CAACW,IAAI,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAS,CAAE,CAAC;EACtF;;;uBAzKW5C,aAAa,EAAA9D,EAAA,CAAA2G,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA7G,EAAA,CAAA2G,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA/G,EAAA,CAAA2G,iBAAA,CAAAK,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAbnD,aAAa;MAAAoD,SAAA;MAAAC,SAAA,WAAAC,oBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;UCZ1BrH,EAAA,CAAAE,cAAA,aAAuB;UAIXF,EAAA,CAAAG,MAAA,eAAQ;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAGnBJ,EAAA,CAAAmB,UAAA,IAAAoG,4BAAA,iBAAkE;UAElEvH,EAAA,CAAAmB,UAAA,IAAAqG,4BAAA,iBAEM;UAENxH,EAAA,CAAAmB,UAAA,IAAAsG,4BAAA,iBAmBM;UACRzH,EAAA,CAAAI,YAAA,EAAM;UAENJ,EAAA,CAAAE,cAAA,aAAuB;UACrBF,EAAA,CAAAmB,UAAA,KAAAuG,6BAAA,iBAEM;UAEN1H,EAAA,CAAAmB,UAAA,KAAAwG,sCAAA,2BAsCe;UACjB3H,EAAA,CAAAI,YAAA,EAAM;;;UAxE0BJ,EAAA,CAAAK,SAAA,GAA4B;UAA5BL,EAAA,CAAAgC,UAAA,SAAAsF,GAAA,CAAAlD,sBAAA,CAA4B;UAE3BpE,EAAA,CAAAK,SAAA,GAA2D;UAA3DL,EAAA,CAAAgC,UAAA,UAAAsF,GAAA,CAAAlD,sBAAA,IAAAkD,GAAA,CAAAnF,aAAA,CAAAyB,MAAA,OAA2D;UAI1D5D,EAAA,CAAAK,SAAA,GAAyD;UAAzDL,EAAA,CAAAgC,UAAA,UAAAsF,GAAA,CAAAlD,sBAAA,IAAAkD,GAAA,CAAAnF,aAAA,CAAAyB,MAAA,KAAyD;UAuB/D5D,EAAA,CAAAK,SAAA,GAAyB;UAAzBL,EAAA,CAAAgC,UAAA,UAAAsF,GAAA,CAAA/F,kBAAA,CAAyB;UAIpCvB,EAAA,CAAAK,SAAA,GAAwB;UAAxBL,EAAA,CAAAgC,UAAA,SAAAsF,GAAA,CAAA/F,kBAAA,CAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}