{"ast":null,"code":"import { ConnectionStatus } from '../../../services/network.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/network.service\";\nimport * as i2 from \"@angular/common\";\nfunction NetworkStatusComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵelement(1, \"i\", 8);\n    i0.ɵɵtext(2, \" Online \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NetworkStatusComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵelement(1, \"i\", 10);\n    i0.ɵɵtext(2, \" Offline - Changes will sync when connection is restored \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NetworkStatusComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵelement(1, \"i\", 12);\n    i0.ɵɵtext(2, \" Server Down - Working in offline mode \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NetworkStatusComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function NetworkStatusComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.checkConnection());\n    });\n    i0.ɵɵtext(1, \" Check Connection \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class NetworkStatusComponent {\n  constructor(networkService) {\n    this.networkService = networkService;\n    this.connectionStatus = ConnectionStatus.Online;\n    this.statusSubscription = null;\n    // For template comparison\n    this.ConnectionStatus = ConnectionStatus;\n  }\n  ngOnInit() {\n    this.statusSubscription = this.networkService.status$.subscribe(status => this.connectionStatus = status);\n  }\n  ngOnDestroy() {\n    if (this.statusSubscription) {\n      this.statusSubscription.unsubscribe();\n    }\n  }\n  checkConnection() {\n    this.networkService.checkConnection();\n  }\n  static {\n    this.ɵfac = function NetworkStatusComponent_Factory(t) {\n      return new (t || NetworkStatusComponent)(i0.ɵɵdirectiveInject(i1.NetworkService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NetworkStatusComponent,\n      selectors: [[\"app-network-status\"]],\n      decls: 7,\n      vars: 6,\n      consts: [[1, \"network-status-container\", 3, \"ngClass\"], [1, \"status-indicator\"], [3, \"ngSwitch\"], [\"class\", \"online\", 4, \"ngSwitchCase\"], [\"class\", \"offline\", 4, \"ngSwitchCase\"], [\"class\", \"server-down\", 4, \"ngSwitchCase\"], [\"class\", \"check-connection-btn\", 3, \"click\", 4, \"ngIf\"], [1, \"online\"], [1, \"fas\", \"fa-wifi\"], [1, \"offline\"], [1, \"fas\", \"fa-wifi-slash\"], [1, \"server-down\"], [1, \"fas\", \"fa-server\"], [1, \"check-connection-btn\", 3, \"click\"]],\n      template: function NetworkStatusComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelementContainerStart(2, 2);\n          i0.ɵɵtemplate(3, NetworkStatusComponent_span_3_Template, 3, 0, \"span\", 3);\n          i0.ɵɵtemplate(4, NetworkStatusComponent_span_4_Template, 3, 0, \"span\", 4);\n          i0.ɵɵtemplate(5, NetworkStatusComponent_span_5_Template, 3, 0, \"span\", 5);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, NetworkStatusComponent_button_6_Template, 2, 0, \"button\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.connectionStatus.toLowerCase());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngSwitch\", ctx.connectionStatus);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", ctx.ConnectionStatus.Online);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", ctx.ConnectionStatus.Offline);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", ctx.ConnectionStatus.ServerDown);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.connectionStatus !== ctx.ConnectionStatus.Online);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgIf, i2.NgSwitch, i2.NgSwitchCase],\n      styles: [\"\\n\\n.network-status-container[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  padding: 8px 16px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  z-index: 1000;\\n  transition: all 0.3s ease-in-out;\\n  transform: translateY(100%);\\n}\\n.network-status-container.online[_ngcontent-%COMP%] {\\n  background-color: rgba(76, 175, 80, 0.9);\\n  transform: translateY(100%);\\n}\\n.network-status-container.offline[_ngcontent-%COMP%] {\\n  background-color: rgba(255, 152, 0, 0.9);\\n  transform: translateY(0);\\n}\\n.network-status-container.server-down[_ngcontent-%COMP%] {\\n  background-color: rgba(244, 67, 54, 0.9);\\n  transform: translateY(0);\\n}\\n.network-status-container[_ngcontent-%COMP%]   .status-indicator[_ngcontent-%COMP%] {\\n  color: white;\\n  font-weight: 500;\\n}\\n.network-status-container[_ngcontent-%COMP%]   .status-indicator[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  margin-right: 6px;\\n}\\n.network-status-container[_ngcontent-%COMP%]   .check-connection-btn[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.2);\\n  color: white;\\n  border: 1px solid white;\\n  border-radius: 4px;\\n  padding: 4px 8px;\\n  cursor: pointer;\\n  transition: background 0.2s ease;\\n}\\n.network-status-container[_ngcontent-%COMP%]   .check-connection-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.3);\\n}\\n.network-status-container.online[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_fadeOut 2s forwards;\\n  animation-delay: 3s;\\n}\\n\\n@keyframes _ngcontent-%COMP%_fadeOut {\\n  from {\\n    transform: translateY(0);\\n    opacity: 1;\\n  }\\n  to {\\n    transform: translateY(100%);\\n    opacity: 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zaGFyZWQvbmV0d29yay1zdGF0dXMvbmV0d29yay1zdGF0dXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkVBQUE7QUFDQTtFQUNFLGVBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLGdDQUFBO0VBQ0EsMkJBQUE7QUFDRjtBQUNFO0VBQ0Usd0NBQUE7RUFDQSwyQkFBQTtBQUNKO0FBRUU7RUFDRSx3Q0FBQTtFQUNBLHdCQUFBO0FBQUo7QUFHRTtFQUNFLHdDQUFBO0VBQ0Esd0JBQUE7QUFESjtBQUlFO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0FBRko7QUFJSTtFQUNFLGlCQUFBO0FBRk47QUFNRTtFQUNFLG9DQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxnQ0FBQTtBQUpKO0FBTUk7RUFDRSxvQ0FBQTtBQUpOO0FBUUU7RUFDRSw4QkFBQTtFQUNBLG1CQUFBO0FBTko7O0FBVUE7RUFDRTtJQUNFLHdCQUFBO0lBQ0EsVUFBQTtFQVBGO0VBVUE7SUFDRSwyQkFBQTtJQUNBLFVBQUE7RUFSRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogc3JjL2FwcC9jb21wb25lbnRzL3NoYXJlZC9uZXR3b3JrLXN0YXR1cy9uZXR3b3JrLXN0YXR1cy5jb21wb25lbnQuc2NzcyAqL1xyXG4ubmV0d29yay1zdGF0dXMtY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgcGFkZGluZzogOHB4IDE2cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB6LWluZGV4OiAxMDAwO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcclxuXHJcbiAgJi5vbmxpbmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg3NiwgMTc1LCA4MCwgMC45KTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTsgLy8gSGlkZSB3aGVuIG9ubGluZVxyXG4gIH1cclxuXHJcbiAgJi5vZmZsaW5lIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAxNTIsIDAsIDAuOSk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgfVxyXG5cclxuICAmLnNlcnZlci1kb3duIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ0LCA2NywgNTQsIDAuOSk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgfVxyXG5cclxuICAuc3RhdHVzLWluZGljYXRvciB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG5cclxuICAgIGkge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDZweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jaGVjay1jb25uZWN0aW9uLWJ0biB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHBhZGRpbmc6IDRweCA4cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZTtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xyXG4gICAgfVxyXG4gIH1cclxuICAvLyBGb3Igb25saW5lIHN0YXR1cywgd2UnbGwgc2hvdyBicmllZmx5IHRoZW4gaGlkZVxyXG4gICYub25saW5lIHtcclxuICAgIGFuaW1hdGlvbjogZmFkZU91dCAycyBmb3J3YXJkcztcclxuICAgIGFuaW1hdGlvbi1kZWxheTogM3M7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcblxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["ConnectionStatus","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NetworkStatusComponent_button_6_Template_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","checkConnection","NetworkStatusComponent","constructor","networkService","connectionStatus","Online","statusSubscription","ngOnInit","status$","subscribe","status","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","i1","NetworkService","selectors","decls","vars","consts","template","NetworkStatusComponent_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtemplate","NetworkStatusComponent_span_3_Template","NetworkStatusComponent_span_4_Template","NetworkStatusComponent_span_5_Template","ɵɵelementContainerEnd","NetworkStatusComponent_button_6_Template","ɵɵproperty","toLowerCase","ɵɵadvance","Offline","ServerDown"],"sources":["C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\components\\shared\\network-status\\network-status.component.ts","C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\components\\shared\\network-status\\network-status.component.html"],"sourcesContent":["// src/app/components/shared/network-status/network-status.component.ts\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NetworkService, ConnectionStatus } from '../../../services/network.service';\r\n\r\n@Component({\r\n  selector: 'app-network-status',\r\n  templateUrl: './network-status.component.html',\r\n  styleUrls: ['./network-status.component.scss']\r\n})\r\nexport class NetworkStatusComponent implements OnInit, OnDestroy {\r\n  connectionStatus: ConnectionStatus = ConnectionStatus.Online;\r\n  private statusSubscription: Subscription | null = null;\r\n\r\n  // For template comparison\r\n  ConnectionStatus = ConnectionStatus;\r\n\r\n  constructor(private networkService: NetworkService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.statusSubscription = this.networkService.status$.subscribe(\r\n      status => this.connectionStatus = status\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.statusSubscription) {\r\n      this.statusSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  checkConnection(): void {\r\n    this.networkService.checkConnection();\r\n  }\r\n}\r\n","<!-- src/app/components/shared/network-status/network-status.component.html -->\r\n<div class=\"network-status-container\" [ngClass]=\"connectionStatus.toLowerCase()\">\r\n  <div class=\"status-indicator\">\r\n    <ng-container [ngSwitch]=\"connectionStatus\">\r\n      <span *ngSwitchCase=\"ConnectionStatus.Online\" class=\"online\">\r\n        <i class=\"fas fa-wifi\"></i> Online\r\n      </span>\r\n      <span *ngSwitchCase=\"ConnectionStatus.Offline\" class=\"offline\">\r\n        <i class=\"fas fa-wifi-slash\"></i> Offline - Changes will sync when connection is restored\r\n      </span>\r\n      <span *ngSwitchCase=\"ConnectionStatus.ServerDown\" class=\"server-down\">\r\n        <i class=\"fas fa-server\"></i> Server Down - Working in offline mode\r\n      </span>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <button *ngIf=\"connectionStatus !== ConnectionStatus.Online\"\r\n          class=\"check-connection-btn\"\r\n          (click)=\"checkConnection()\">\r\n    Check Connection\r\n  </button>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}