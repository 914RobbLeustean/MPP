{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/app.component.ts\nimport { Component } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { ConnectionStatus } from './services/network.service';\nimport { filter } from 'rxjs/operators';\nexport let AppComponent = class AppComponent {\n  constructor(router, viewportScroller, signalrService, networkService, offlineQueueService, authService) {\n    this.router = router;\n    this.viewportScroller = viewportScroller;\n    this.signalrService = signalrService;\n    this.networkService = networkService;\n    this.offlineQueueService = offlineQueueService;\n    this.authService = authService;\n    this.title = 'Thrifto';\n  }\n  ngOnInit() {\n    // AGGRESSIVE SCROLL TO TOP - Fixed typing\n    this.routerSubscription = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      // Method 1: ViewportScroller\n      this.viewportScroller.scrollToPosition([0, 0]);\n      // Method 2: Direct window scroll\n      window.scrollTo(0, 0);\n      // Method 3: Scroll with delay to ensure DOM is ready\n      setTimeout(() => {\n        window.scrollTo({\n          top: 0,\n          left: 0,\n          behavior: 'auto'\n        });\n        document.documentElement.scrollTop = 0;\n        document.body.scrollTop = 0;\n      }, 0);\n      // Method 4: Additional delay for stubborn cases\n      setTimeout(() => {\n        window.scrollTo({\n          top: 0,\n          left: 0,\n          behavior: 'auto'\n        });\n      }, 10);\n    });\n    // Initialize network monitoring\n    this.networkService.status$.subscribe(status => {\n      console.log('Network status:', status);\n      // Manage SignalR connection based on network status\n      if (status === ConnectionStatus.Online && this.authService.isLoggedIn()) {\n        this.initializeSignalRConnection();\n      } else {\n        // Disconnect SignalR if network is down or server is down\n        this.signalrService.stopConnection();\n      }\n    });\n    // Setup window focus event to check connection when tab becomes active\n    window.addEventListener('focus', () => {\n      this.networkService.checkConnection();\n    });\n    // Listen for auth state changes to manage SignalR connection\n    this.authService.currentUser$.subscribe(user => {\n      if (user && this.networkService.isOnline) {\n        this.initializeSignalRConnection();\n      } else if (!user) {\n        this.signalrService.stopConnection();\n      }\n    });\n    // Initial connection if conditions are right\n    if (this.networkService.isOnline && this.authService.isLoggedIn()) {\n      this.initializeSignalRConnection();\n    }\n  }\n  ngOnDestroy() {\n    if (this.routerSubscription) {\n      this.routerSubscription.unsubscribe();\n    }\n  }\n  initializeSignalRConnection() {\n    this.signalrService.startConnection().then(() => console.log('SignalR connected successfully')).catch(err => console.error('Error connecting to SignalR:', err));\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","NavigationEnd","ConnectionStatus","filter","AppComponent","constructor","router","viewportScroller","signalrService","networkService","offlineQueueService","authService","title","ngOnInit","routerSubscription","events","pipe","event","subscribe","scrollToPosition","window","scrollTo","setTimeout","top","left","behavior","document","documentElement","scrollTop","body","status$","status","console","log","Online","isLoggedIn","initializeSignalRConnection","stopConnection","addEventListener","checkConnection","currentUser$","user","isOnline","ngOnDestroy","unsubscribe","startConnection","then","catch","err","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\leust\\source\\repos\\MPP-main\\Thrifto\\thrifto.client\\src\\app\\app.component.ts"],"sourcesContent":["// src/app/app.component.ts\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { NetworkService, ConnectionStatus } from './services/network.service';\r\n//import { OfflineQueueService } from './services/offline-queue.service';\r\nimport { SignalrService } from './services/signalr.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { ViewportScroller } from '@angular/common';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n    title = 'Thrifto';\r\n    private routerSubscription!: Subscription; // Fixed with definite assignment assertion\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private viewportScroller: ViewportScroller,\r\n        private signalrService: SignalrService,\r\n        private networkService: NetworkService,\r\n        private offlineQueueService: OfflineQueueService,\r\n        private authService: AuthService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // AGGRESSIVE SCROLL TO TOP - Fixed typing\r\n        this.routerSubscription = this.router.events.pipe(\r\n            filter((event): event is NavigationEnd => event instanceof NavigationEnd)\r\n        ).subscribe((event: NavigationEnd) => {\r\n            // Method 1: ViewportScroller\r\n            this.viewportScroller.scrollToPosition([0, 0]);\r\n\r\n            // Method 2: Direct window scroll\r\n            window.scrollTo(0, 0);\r\n\r\n            // Method 3: Scroll with delay to ensure DOM is ready\r\n            setTimeout(() => {\r\n                window.scrollTo({ top: 0, left: 0, behavior: 'auto' });\r\n                document.documentElement.scrollTop = 0;\r\n                document.body.scrollTop = 0;\r\n            }, 0);\r\n\r\n            // Method 4: Additional delay for stubborn cases\r\n            setTimeout(() => {\r\n                window.scrollTo({ top: 0, left: 0, behavior: 'auto' });\r\n            }, 10);\r\n        });\r\n\r\n        // Initialize network monitoring\r\n        this.networkService.status$.subscribe(status => {\r\n            console.log('Network status:', status);\r\n\r\n            // Manage SignalR connection based on network status\r\n            if (status === ConnectionStatus.Online && this.authService.isLoggedIn()) {\r\n                this.initializeSignalRConnection();\r\n            } else {\r\n                // Disconnect SignalR if network is down or server is down\r\n                this.signalrService.stopConnection();\r\n            }\r\n        });\r\n\r\n        // Setup window focus event to check connection when tab becomes active\r\n        window.addEventListener('focus', () => {\r\n            this.networkService.checkConnection();\r\n        });\r\n\r\n        // Listen for auth state changes to manage SignalR connection\r\n        this.authService.currentUser$.subscribe(user => {\r\n            if (user && this.networkService.isOnline) {\r\n                this.initializeSignalRConnection();\r\n            } else if (!user) {\r\n                this.signalrService.stopConnection();\r\n            }\r\n        });\r\n\r\n        // Initial connection if conditions are right\r\n        if (this.networkService.isOnline && this.authService.isLoggedIn()) {\r\n            this.initializeSignalRConnection();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.routerSubscription) {\r\n            this.routerSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private initializeSignalRConnection(): void {\r\n        this.signalrService.startConnection()\r\n            .then(() => console.log('SignalR connected successfully'))\r\n            .catch(err => console.error('Error connecting to SignalR:', err));\r\n    }\r\n}"],"mappings":";AAAA;AACA,SAASA,SAAS,QAA2B,eAAe;AAC5D,SAAiBC,aAAa,QAAQ,iBAAiB;AACvD,SAAyBC,gBAAgB,QAAQ,4BAA4B;AAK7E,SAASC,MAAM,QAAQ,gBAAgB;AAQhC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIrBC,YACYC,MAAc,EACdC,gBAAkC,EAClCC,cAA8B,EAC9BC,cAA8B,EAC9BC,mBAAwC,EACxCC,WAAwB;IALxB,KAAAL,MAAM,GAANA,MAAM;IACN,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,WAAW,GAAXA,WAAW;IATvB,KAAAC,KAAK,GAAG,SAAS;EAUb;EAEJC,QAAQA,CAAA;IACJ;IACA,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACR,MAAM,CAACS,MAAM,CAACC,IAAI,CAC7Cb,MAAM,CAAEc,KAAK,IAA6BA,KAAK,YAAYhB,aAAa,CAAC,CAC5E,CAACiB,SAAS,CAAED,KAAoB,IAAI;MACjC;MACA,IAAI,CAACV,gBAAgB,CAACY,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAE9C;MACAC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAErB;MACAC,UAAU,CAAC,MAAK;QACZF,MAAM,CAACC,QAAQ,CAAC;UAAEE,GAAG,EAAE,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAM,CAAE,CAAC;QACtDC,QAAQ,CAACC,eAAe,CAACC,SAAS,GAAG,CAAC;QACtCF,QAAQ,CAACG,IAAI,CAACD,SAAS,GAAG,CAAC;MAC/B,CAAC,EAAE,CAAC,CAAC;MAEL;MACAN,UAAU,CAAC,MAAK;QACZF,MAAM,CAACC,QAAQ,CAAC;UAAEE,GAAG,EAAE,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAM,CAAE,CAAC;MAC1D,CAAC,EAAE,EAAE,CAAC;IACV,CAAC,CAAC;IAEF;IACA,IAAI,CAAChB,cAAc,CAACqB,OAAO,CAACZ,SAAS,CAACa,MAAM,IAAG;MAC3CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAAC;MAEtC;MACA,IAAIA,MAAM,KAAK7B,gBAAgB,CAACgC,MAAM,IAAI,IAAI,CAACvB,WAAW,CAACwB,UAAU,EAAE,EAAE;QACrE,IAAI,CAACC,2BAA2B,EAAE;OACrC,MAAM;QACH;QACA,IAAI,CAAC5B,cAAc,CAAC6B,cAAc,EAAE;;IAE5C,CAAC,CAAC;IAEF;IACAjB,MAAM,CAACkB,gBAAgB,CAAC,OAAO,EAAE,MAAK;MAClC,IAAI,CAAC7B,cAAc,CAAC8B,eAAe,EAAE;IACzC,CAAC,CAAC;IAEF;IACA,IAAI,CAAC5B,WAAW,CAAC6B,YAAY,CAACtB,SAAS,CAACuB,IAAI,IAAG;MAC3C,IAAIA,IAAI,IAAI,IAAI,CAAChC,cAAc,CAACiC,QAAQ,EAAE;QACtC,IAAI,CAACN,2BAA2B,EAAE;OACrC,MAAM,IAAI,CAACK,IAAI,EAAE;QACd,IAAI,CAACjC,cAAc,CAAC6B,cAAc,EAAE;;IAE5C,CAAC,CAAC;IAEF;IACA,IAAI,IAAI,CAAC5B,cAAc,CAACiC,QAAQ,IAAI,IAAI,CAAC/B,WAAW,CAACwB,UAAU,EAAE,EAAE;MAC/D,IAAI,CAACC,2BAA2B,EAAE;;EAE1C;EAEAO,WAAWA,CAAA;IACP,IAAI,IAAI,CAAC7B,kBAAkB,EAAE;MACzB,IAAI,CAACA,kBAAkB,CAAC8B,WAAW,EAAE;;EAE7C;EAEQR,2BAA2BA,CAAA;IAC/B,IAAI,CAAC5B,cAAc,CAACqC,eAAe,EAAE,CAChCC,IAAI,CAAC,MAAMd,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAAC,CACzDc,KAAK,CAACC,GAAG,IAAIhB,OAAO,CAACiB,KAAK,CAAC,8BAA8B,EAAED,GAAG,CAAC,CAAC;EACzE;CACH;AAjFY5C,YAAY,GAAA8C,UAAA,EALxBlD,SAAS,CAAC;EACPmD,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACrC,CAAC,C,EACWjD,YAAY,CAiFxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}